name: 'Run tests using benchexec'
description: 'Running benchexec tests on xcfa-cli'
inputs:
    task:
        required: true
    test_number:
        required: true
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
    - name: Install benchexec and dependencies
      shell: bash
      run: |
        sudo add-apt-repository ppa:sosy-lab/benchmarking
        sudo apt install benchexec openjdk-17-jre-headless libgomp1 libmpfr-dev
    - name: Get benchmark definition file
      shell: bash
      run: |
        mkdir -p xml
        cp $GITHUB_ACTION_PATH/theta.xml xml/
    - name: Get sv-benchmarks (retry max. 3 times)
      uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
      with:
        timeout_minutes: 15
        max_attempts: 3
        shell: bash
        command: git clone --filter=blob:none --no-checkout --depth 1 --sparse https://gitlab.com/sosy-lab/benchmarking/sv-benchmarks.git
    - name: Get C folder (retry max. 3 times)
      uses: nick-fields/retry@7152eba30c6575329ac0576536151aca5a72780e # v3.0.0
      with:
        timeout_minutes: 15
        max_attempts: 3
        shell: bash
        command: |
          cd sv-benchmarks
          git sparse-checkout add c
          git checkout
    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      name: Get zip
      with:
        name: Theta_SV-COMP
        path: release/
    - name: Unzip 
      shell: bash
      run: |
        unzip release/Theta.zip
    - name: Cut setfile if too long
      id: setfile 
      shell: bash
      run: |
        cd sv-benchmarks/c
        for i in $(sed 's/#.*$//g' ${{ inputs.task }}.set); do find . -wholename ./$i; done | while read line; do grep "${line#./}" $GITHUB_ACTION_PATH/unsupported.txt >/dev/null 2>/dev/null || test -z $(yq e '.properties.[] | select(.property_file == "../properties/unreach-call.prp")' $line) >/dev/null 2>/dev/null || echo  $(echo $line | sha1sum | awk ' { print $1 } ') $line ; done | sort -k1 | awk ' { $1=""; print $0 } ' | awk '{$1=$1};1' > all-files.txt
        head -n${{ inputs.test_number }} all-files.txt > ${{ inputs.task }}.set
        echo "length=$(cat ${{ inputs.task }}.set | wc -l)" >> "$GITHUB_OUTPUT"
        cat ${{ inputs.task }}.set
    - name: Run benchexec
      shell: bash
      if: steps.setfile.outputs.length != '0'
      run: |
        benchexec xml/theta.xml --no-container --tool-directory Theta -t ${{ inputs.task }}
    - name: Upload results
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      if: steps.setfile.outputs.length != '0'
      with:
        name: BenchexecResults-${{ inputs.task }}
        path: results

name: Check version
on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency: 
  group: version-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          ref: master
      - name: Master version
        id: master_version
        run: |
          echo version=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}') >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: New version
        id: new_version
        run: |
          echo version=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}') >> $GITHUB_OUTPUT

      - name: test version
        id: version_test
        run: |
          compare_versions() {
              local i
              for ((i = 0; i < 3; i++)); do
                if (( ${1[$i]} > ${2[$i]} )); then
                  return 0
                elif (( ${1[$i]} < ${2[$i]} )); then
                  return 1
                fi
              done
              return 2
          }
          IFS='.' read -r -a new_arr <<< "${{ steps.new_version.outputs.version }}"
          IFS='.' read -r -a master_arr <<< "${{ steps.new_version.outputs.version }}"
          compare_versions new_arr master_arr && echo status="ok" >> $GITHUB_OUTPUT || echo status="notok" >> $GITHUB_OUTPUT 

      - name: version is correct
        if: ${{ steps.version_test.outputs.status == "ok" }}
        run: echo "New version ${{ steps.new_version.outputs.version }} is OK"


      - name: version is incorrect, creating suggestion
        if: ${{ steps.version_test.outputs.status == "notok" }}
        run: |
          IFS='.' read -r -a array <<< "${{ steps.new_version.outputs.version }}"
          new_version="${array[0]}.${array[1]}.$((array[2]+1))"
          sed -i "s/version = \".*\"/version = \"$new_version\"/" build.gradle.kts
      - name: version is incorrect, posting suggestion
        if: ${{ steps.version_test.outputs.status == "notok" }}
        uses: reviewdog/action-suggester@v1
        with:
          level: error
      - name: version is incorrect, reporting
        if: ${{ steps.version_test.outputs.status == "notok" }}
        run: |
          echo "New version ${{ steps.new_version.outputs.version }} is NOT OK"
          exit 1
name: CI-test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  # Tests Theta on different Linux versions
  test-linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, ubuntu-22.04, ubuntu-20.04 ]
        java: [ 17 ]
    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }} with JDK ${{ matrix.java }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Build Theta
        uses: ./.github/actions/build-linux
        with:
          java-version: ${{ matrix.java }}
      - name: Test with Gradle
        run: ./gradlew test

  # Tests Theta on different Windows versions
  test-windows:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, windows-2022, windows-2019 ]
        java: [ 17 ]
    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.os }} with JDK ${{ matrix.java }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Build Theta
        uses: ./.github/actions/build-windows
        with:
          java-version: ${{ matrix.java }}
      - name: Test with Gradle
        run: .\gradlew.bat test

  # Test the different Theta Docker images
  test-docker:
    strategy:
      fail-fast: false
      matrix:
        container: [
          { name: theta-cfa-cli, test: "subprojects/cfa/cfa/src/test/resources/counter5_true.cfa" },
          { name: theta-sts-cli, test: "subprojects/sts/sts/src/test/resources/simple1.system" },
          { name: theta-xsts-cli, test: "subprojects/xsts/xsts-analysis/src/test/resources/model/sequential.xsts --property \"!(x==1)\"" },
          { name: theta-xta-cli, test: "subprojects/xta/xta/src/test/resources/csma-2.xta -c LU -s BFS" }
        ]
    runs-on: ubuntu-latest
    name: Build Docker image ${{ matrix.container.name }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Build ${{ matrix.container.name }}:latest
        uses: ./.github/actions/build-docker
        with:
          container-name: ${{ matrix.container.name }}
          container-version: latest
      - name: Run test for ${{ matrix.container.name }}
        run: |
          ./docker/run-${{ matrix.container.name }}.sh ${{ matrix.container.test }}

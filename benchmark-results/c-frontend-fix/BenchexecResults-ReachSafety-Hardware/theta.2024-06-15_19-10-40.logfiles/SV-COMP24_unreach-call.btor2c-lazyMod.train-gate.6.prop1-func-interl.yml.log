Theta/theta-start.sh sv-benchmarks/c/hardware-verification-bv/btor2c-lazyMod.train-gate.6.prop1-func-interl.c --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --input sv-benchmarks/c/hardware-verification-bv/btor2c-lazyMod.train-gate.6.prop1-func-interl.c --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/hardware-verification-bv/btor2c-lazyMod.train-gate.6.prop1-func-interl.c as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: using int(1) as a string constant
Arithmetic: [BITWISE]
Frontend finished:   (in 3036 ms)
ParsingResult Success
Alias graph size: 0 -> []
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio BITWISE
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=cvc5:1.0.8, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=ERR, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=cvc5:1.0.8, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceNewtonChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 5 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 3
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 2
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 7 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 4
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 3
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 7 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 4
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision did NOT change in this iteration
server: Iteration 4
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 7 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: Counterexample hash check: NO new cex found
server: Process failed! (hu.bme.mit.theta.analysis.runtimemonitor.CexMonitor.throwNotSolvable(CexMonitor.kt:61), hu.bme.mit.theta.common.exception.NotSolvableException: Task is not solvable with this configuration!)
ErrorCodeException(code=220)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:116)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:211)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:210)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:210)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:80)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda-0(ConfigToPortfolio.kt:72)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:28)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:211)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:210)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:210)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:80)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=220)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=0, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=NOPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=mathsat:5.6.10, validateAbstractionSolver=false, domain=PRED_CART, maxEnum=1, search=ERR, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=mathsat:5.6.10, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist XcfaDistToErrComparator)) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 5 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 3
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 2
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 7 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 4
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 3
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 9 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 5
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 4
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 11 nodes, 2 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 6

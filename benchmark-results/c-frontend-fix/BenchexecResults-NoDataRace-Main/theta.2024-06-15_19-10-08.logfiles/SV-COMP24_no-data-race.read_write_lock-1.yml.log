Theta/theta-start.sh sv-benchmarks/c/pthread-atomic/read_write_lock-1.i --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --portfolio COMPLEX --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp --input sv-benchmarks/c/pthread-atomic/read_write_lock-1.i --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/pthread-atomic/read_write_lock-1.i as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: CompoundDefinitions are not yet implemented!
WARNING: Unknown simple type union pthread_attr_t
WARNING: enums are not yet supported! Using int instead.
Arithmetic: []
Frontend finished:   (in 994 ms)
ParsingResult Success
Alias graph size: 0 -> []
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio MULTITHREAD
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using CEGAR
server: Configuration: (CegarChecker (XcfaAbstractor (PriorityWaitlist (Combinator TargetFirst (Combinator (Inverter DepthOrder) CreationOrder)))) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
server: Iteration 1
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 42 nodes, 15 incomplete, 1 unsafe
server: | Checking abstraction done, result: (AbstractorResult Unsafe)
server: | Refining abstraction...
server: |  |  Trace length: 24
server: |  |  Checking trace...done, result: (ExprTraceStatus Infeasible)
server: |  |  Pruning whole ARGdone
server: Refining abstraction done, result: (RefinerResult Spurious)
server: ! Precision DID change in this iteration
server: Iteration 2
server: | Checking abstraction...
server: |  |  (Re)initializing ARG...done
server: |  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
server: |  |  Building ARG...done
server: |  |  Finished ARG: 1450 nodes, 0 incomplete, 0 unsafe
server: | Checking abstraction done, result: (AbstractorResult Safe)
server: (SafetyResult Safe)
server: AlgorithmTimeMs: 877
server: Iterations: 2
server: 
server: Backend finished (in 998 ms)
server: (SafetyResult Safe)
Backend finished (in 2345 ms)
(SafetyResult Safe)
Config XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false)) succeeded in 2388 ms
Backend finished (in 2391 ms)
(SafetyResult Safe)

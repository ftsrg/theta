Theta/theta-start.sh sv-benchmarks/c/pthread-ext/02_inc_cas.i --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32 --portfolio CEGAR --input sv-benchmarks/c/pthread-ext/02_inc_cas.i --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/pthread-ext/02_inc_cas.i as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: CompoundDefinitions are not yet implemented!
WARNING: Unknown simple type union pthread_attr_t
WARNING: enums are not yet supported! Using int instead.
Arithmetic: []
Frontend finished:   (in 926 ms)
ParsingResult Success
Alias graph size: 3 -> [1, 0, 2]
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio MULTITHREAD
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=AASPOR, porRandomSeed=-1, coi=COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Could not parse (assign __VERIFIER_atomic_CAS::r (mod thr1::casret* 4294967296))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@1bb266b3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@b968a76, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@2f9a01c1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@2611b9a3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@54227100, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@6b5894c8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@f096f37, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@3effd4f3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@41f4fe5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@15f8701f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@514cd540, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@11d4dbd6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@6f4ade6e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@39e43310, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@eb507b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@390877d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@86733, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@186cb891, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f172c099f38@3ec2ecea) }
server: env: Env( (Frame value <- (var value Int) value* <- (var value* Int) __sp <- (var __sp Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_atomic_CAS_ret <- (var __VERIFIER_atomic_CAS_ret Int) __VERIFIER_atomic_CAS::v <- (var __VERIFIER_atomic_CAS::v Int) __VERIFIER_atomic_CAS::e <- (var __VERIFIER_atomic_CAS::e Int) __VERIFIER_atomic_CAS::u <- (var __VERIFIER_atomic_CAS::u Int) __VERIFIER_atomic_CAS::r <- (var __VERIFIER_atomic_CAS::r Int) thr1_ret <- (var thr1_ret Int) thr1::arg <- (var thr1::arg Int) thr1::v <- (var thr1::v Int) thr1::vn <- (var thr1::vn Int) thr1::casret <- (var thr1::casret Int) call___VERIFIER_atomic_begin_ret0 <- (var call___VERIFIER_atomic_begin_ret0 Int) call___VERIFIER_atomic_end_ret1 <- (var call___VERIFIER_atomic_end_ret1 Int) call___VERIFIER_atomic_CAS_ret2 <- (var call___VERIFIER_atomic_CAS_ret2 Int) call___VERIFIER_atomic_begin_ret3 <- (var call___VERIFIER_atomic_begin_ret3 Int) call_reach_error_ret4 <- (var call_reach_error_ret4 Int) call_abort_ret5 <- (var call_abort_ret5 Int) call___VERIFIER_atomic_end_ret6 <- (var call___VERIFIER_atomic_end_ret6 Int) thr1::casret* <- (var thr1::casret* Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:66)
server: 	at org.antlr.v4.runtime.Parser.match(Parser.java:206)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2388)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.InputMismatchException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:61)
server: 	... 52 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=300000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=AASPOR, porRandomSeed=-1, coi=COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=z3:4.12.2, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=z3:4.12.2, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Could not parse (assign __VERIFIER_atomic_CAS::r (mod thr1::casret* 4294967296))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@1bb266b3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@b968a76, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@2f9a01c1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@2611b9a3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@54227100, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@6b5894c8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@f096f37, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@3effd4f3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@41f4fe5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@15f8701f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@514cd540, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@11d4dbd6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@6f4ade6e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@39e43310, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@eb507b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@390877d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@86733, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@186cb891, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fcd9c099f38@3ec2ecea) }
server: env: Env( (Frame value <- (var value Int) value* <- (var value* Int) __sp <- (var __sp Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_atomic_CAS_ret <- (var __VERIFIER_atomic_CAS_ret Int) __VERIFIER_atomic_CAS::v <- (var __VERIFIER_atomic_CAS::v Int) __VERIFIER_atomic_CAS::e <- (var __VERIFIER_atomic_CAS::e Int) __VERIFIER_atomic_CAS::u <- (var __VERIFIER_atomic_CAS::u Int) __VERIFIER_atomic_CAS::r <- (var __VERIFIER_atomic_CAS::r Int) thr1_ret <- (var thr1_ret Int) thr1::arg <- (var thr1::arg Int) thr1::v <- (var thr1::v Int) thr1::vn <- (var thr1::vn Int) thr1::casret <- (var thr1::casret Int) call___VERIFIER_atomic_begin_ret0 <- (var call___VERIFIER_atomic_begin_ret0 Int) call___VERIFIER_atomic_end_ret1 <- (var call___VERIFIER_atomic_end_ret1 Int) call___VERIFIER_atomic_CAS_ret2 <- (var call___VERIFIER_atomic_CAS_ret2 Int) call___VERIFIER_atomic_begin_ret3 <- (var call___VERIFIER_atomic_begin_ret3 Int) call_reach_error_ret4 <- (var call_reach_error_ret4 Int) call_abort_ret5 <- (var call_abort_ret5 Int) call___VERIFIER_atomic_end_ret6 <- (var call___VERIFIER_atomic_end_ret6 Int) thr1::casret* <- (var thr1::casret* Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:66)
server: 	at org.antlr.v4.runtime.Parser.match(Parser.java:206)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2388)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.InputMismatchException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:61)
server: 	... 52 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=0, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=AASPOR, porRandomSeed=-1, coi=COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=PRED_CART, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: Could not parse (assign __VERIFIER_atomic_CAS::r (mod thr1::casret* 4294967296))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@1bb266b3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@b968a76, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@2f9a01c1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@2611b9a3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@54227100, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@6b5894c8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@f096f37, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@3effd4f3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@41f4fe5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@15f8701f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@514cd540, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@11d4dbd6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@6f4ade6e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@39e43310, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@eb507b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@390877d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@86733, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@186cb891, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f4fdc099f38@3ec2ecea) }
server: env: Env( (Frame value <- (var value Int) value* <- (var value* Int) __sp <- (var __sp Int) reach_error_ret <- (var reach_error_ret Int) __VERIFIER_atomic_CAS_ret <- (var __VERIFIER_atomic_CAS_ret Int) __VERIFIER_atomic_CAS::v <- (var __VERIFIER_atomic_CAS::v Int) __VERIFIER_atomic_CAS::e <- (var __VERIFIER_atomic_CAS::e Int) __VERIFIER_atomic_CAS::u <- (var __VERIFIER_atomic_CAS::u Int) __VERIFIER_atomic_CAS::r <- (var __VERIFIER_atomic_CAS::r Int) thr1_ret <- (var thr1_ret Int) thr1::arg <- (var thr1::arg Int) thr1::v <- (var thr1::v Int) thr1::vn <- (var thr1::vn Int) thr1::casret <- (var thr1::casret Int) call___VERIFIER_atomic_begin_ret0 <- (var call___VERIFIER_atomic_begin_ret0 Int) call___VERIFIER_atomic_end_ret1 <- (var call___VERIFIER_atomic_end_ret1 Int) call___VERIFIER_atomic_CAS_ret2 <- (var call___VERIFIER_atomic_CAS_ret2 Int) call___VERIFIER_atomic_begin_ret3 <- (var call___VERIFIER_atomic_begin_ret3 Int) call_reach_error_ret4 <- (var call_reach_error_ret4 Int) call_abort_ret5 <- (var call_abort_ret5 Int) call___VERIFIER_atomic_end_ret6 <- (var call___VERIFIER_atomic_end_ret6 Int) thr1::casret* <- (var thr1::casret* Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
server: 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:66)
server: 	at org.antlr.v4.runtime.Parser.match(Parser.java:206)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2388)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 28 more
server: Caused by: org.antlr.v4.runtime.InputMismatchException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recoverInline(BailErrorStrategy.java:61)
server: 	... 52 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Could not handle trigger ErrorCodeException(code=1) (Available triggers: [SolverError])
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=false, specConfig=CegarConfig(initPrec=EMPTY, porLevel=AASPOR, porRandomSeed=-1, coi=COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
Configuration: (CegarChecker (XcfaArgAbstractor (PriorityWaitlist (Combinator TargetFirst (Combinator (Inverter DepthOrder) CreationOrder)))) hu.bme.mit.theta.analysis.expr.refinement.AasporRefiner@7c1503a3)
Iteration 1
| Checking abstraction...
|  |  (Re)initializing ARG...done
|  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
|  |  Building ARG...
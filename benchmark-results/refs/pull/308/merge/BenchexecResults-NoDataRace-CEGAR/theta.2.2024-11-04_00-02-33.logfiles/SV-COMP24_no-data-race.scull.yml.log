Theta/theta-start.sh sv-benchmarks/c/pthread-atomic/scull.i --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp --architecture ILP32


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/no-data-race.prp --architecture ILP32 --portfolio CEGAR --input sv-benchmarks/c/pthread-atomic/scull.i --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/pthread-atomic/scull.i as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: CompoundDefinitions are not yet implemented!
WARNING: Unknown simple type union pthread_attr_t
WARNING: enums are not yet supported! Using int instead.
Arithmetic: [NONLIN_INT]
Frontend finished:   (in 1598 ms)
ParsingResult Success
Alias graph size: 0 -> []
Starting verification of UnnamedXcfa using PORTFOLIO
Using portfolio MULTITHREAD
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:12 no viable alternative at input '*'
server: Could not parse (assign lock* 2)
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1c1bbc4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@55fe41ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@fbd1f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1ce24091, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@5dda768f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7a8c8dcf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@24269709, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3541cb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7829b776, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@5778826f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@56bc3fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@df4b72, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2ba45490, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@37ff4054, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@894858, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7af707e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@737edcfa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@383790cf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@74971ed9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@131fcb6f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@ccd1bc3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@878537d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4455f57d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@29fc1a2b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4d0b0fd4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7a24eb3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6c37bd27, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@25d3cfc8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@30331109, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2571066a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@74fe5966, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4fe875be, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@677b8e13, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4a9486c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4c27d39d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@65004ff6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4cafa9aa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@562c877a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@67001148, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@989da1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@31cb96e1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3eed0f5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@64030b91, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2032e725, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4d23015c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@383f1975, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@441cc260, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@73a00e09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@26dcd8c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@66e889df, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@444548a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3766c667, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@773c0293, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@55b8dbda, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3b569985, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3a022576, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2dbd803f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3e48e859, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@31ddd4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1a5f7e7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@5b22b970, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@54657dd2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@706eab5d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@72725ee1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@40e60ece, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3f9270ed, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3a230001, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@5ac6c4f2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2aa6311a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@61f39bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@249e0271, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4893b344, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@53a665ad, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2c0b4c83, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@78525ef9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2d0ecb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4d654825, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3bfc6a5e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@51b35e4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@abff8b7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6d7cada5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@350a94ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7e00ed0f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@62db0521, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1b4ae4e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6ef1a1b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@5fbdc49b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@65753040, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2954b5ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4acb2510, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7be3a9ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@37d871c2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3baf6936, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@285f38f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4e1459ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@3ab6678b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7a904f32, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2b59501e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@476e8796, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4eed2acf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@36fc05ff, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@57c47a9e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@642505c7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4339e0de, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2d9f64c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@21ac5eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@52d6cd34, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@715d6168, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@27b2faa6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6428591a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@7397c6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1abfe081, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@2a685eba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@c2e3264, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@107f4980, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@75a118e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@1d540566, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6014a9ba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@acdcf71, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@77d680e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4a14c44f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@f08fdce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@6bda1d19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@28c86134, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@4492eede, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f6b10099f38@cbc8d0f) }
server: env: Env( (Frame i <- (var i Int) lock <- (var lock Int) scull_quantum <- (var scull_quantum Int) scull_qset <- (var scull_qset Int) dev_data <- (var dev_data Int) dev_quantum <- (var dev_quantum Int) dev_qset <- (var dev_qset Int) dev_size <- (var dev_size Int) __X__ <- (var __X__ Int) lock* <- (var lock* Int) reach_error_ret <- (var reach_error_ret Int) down_interruptible_ret <- (var down_interruptible_ret Int) call_pthread_mutex_lock_ret0 <- (var call_pthread_mutex_lock_ret0 Int) up_ret <- (var up_ret Int) call_pthread_mutex_unlock_ret1 <- (var call_pthread_mutex_unlock_ret1 Int) copy_to_user_ret <- (var copy_to_user_ret Int) copy_to_user::to <- (var copy_to_user::to Int) copy_to_user::from <- (var copy_to_user::from Int) copy_to_user::n <- (var copy_to_user::n Int) call___VERIFIER_nondet_int_ret2 <- (var call___VERIFIER_nondet_int_ret2 Int) copy_from_user_ret <- (var copy_from_user_ret Int) copy_from_user::to <- (var copy_from_user::to Int) copy_from_user::from <- (var copy_from_user::from Int) copy_from_user::n <- (var copy_from_user::n Int) call___VERIFIER_nondet_int_ret3 <- (var call___VERIFIER_nondet_int_ret3 Int) scull_trim_ret <- (var scull_trim_ret Int) scull_trim::dev <- (var scull_trim::dev Int) scull_trim::qset <- (var scull_trim::qset Int) scull_open_ret <- (var scull_open_ret Int) scull_open::tid <- (var scull_open::tid Int) scull_open::i <- (var scull_open::i Int) scull_open::filp <- (var scull_open::filp Int) scull_open::dev <- (var scull_open::dev Int) call_down_interruptible_ret4 <- (var call_down_interruptible_ret4 Int) call_scull_trim_ret5 <- (var call_scull_trim_ret5 Int) call_reach_error_ret6 <- (var call_reach_error_ret6 Int) call_abort_ret7 <- (var call_abort_ret7 Int) call_up_ret8 <- (var call_up_ret8 Int) scull_follow_ret <- (var scull_follow_ret Int) scull_follow::dev <- (var scull_follow::dev Int) scull_follow::n <- (var scull_follow::n Int) call___VERIFIER_nondet_int_ret9 <- (var call___VERIFIER_nondet_int_ret9 Int) scull_read_ret <- (var scull_read_ret Int) scull_read::tid <- (var scull_read::tid Int) scull_read::filp <- (var scull_read::filp Int) scull_read::buf <- (var scull_read::buf Int) scull_read::count <- (var scull_read::count Int) scull_read::f_pos <- (var scull_read::f_pos Int) scull_read::dev <- (var scull_read::dev Int) scull_read::dptr <- (var scull_read::dptr Int) scull_read::quantum <- (var scull_read::quantum Int) scull_read::qset <- (var scull_read::qset Int) scull_read::itemsize <- (var scull_read::itemsize Int) scull_read::item <- (var scull_read::item Int) scull_read::s_pos <- (var scull_read::s_pos Int) scull_read::q_pos <- (var scull_read::q_pos Int) scull_read::rest <- (var scull_read::rest Int) scull_read::retval <- (var scull_read::retval Int) call_down_interruptible_ret10 <- (var call_down_interruptible_ret10 Int) call_scull_follow_ret11 <- (var call_scull_follow_ret11 Int) call_copy_to_user_ret12 <- (var call_copy_to_user_ret12 Int) call_reach_error_ret13 <- (var call_reach_error_ret13 Int) call_abort_ret14 <- (var call_abort_ret14 Int) call_up_ret15 <- (var call_up_ret15 Int) scull_write_ret <- (var scull_write_ret Int) scull_write::tid <- (var scull_write::tid Int) scull_write::filp <- (var scull_write::filp Int) scull_write::buf <- (var scull_write::buf Int) scull_write::count <- (var scull_write::count Int) scull_write::f_pos <- (var scull_write::f_pos Int) scull_write::dev <- (var scull_write::dev Int) scull_write::dptr <- (var scull_write::dptr Int) scull_write::quantum <- (var scull_write::quantum Int) scull_write::qset <- (var scull_write::qset Int) scull_write::itemsize <- (var scull_write::itemsize Int) scull_write::item <- (var scull_write::item Int) scull_write::s_pos <- (var scull_write::s_pos Int) scull_write::q_pos <- (var scull_write::q_pos Int) scull_write::rest <- (var scull_write::rest Int) scull_write::retval <- (var scull_write::retval Int) call_down_interruptible_ret16 <- (var call_down_interruptible_ret16 Int) call_scull_follow_ret17 <- (var call_scull_follow_ret17 Int) call_copy_from_user_ret18 <- (var call_copy_from_user_ret18 Int) call_reach_error_ret19 <- (var call_reach_error_ret19 Int) call_abort_ret20 <- (var call_abort_ret20 Int) call_up_ret21 <- (var call_up_ret21 Int) scull_cleanup_module_ret <- (var scull_cleanup_module_ret Int) scull_cleanup_module::dev <- (var scull_cleanup_module::dev Int) call___VERIFIER_nondet_int_ret22 <- (var call___VERIFIER_nondet_int_ret22 Int) call_scull_trim_ret23 <- (var call_scull_trim_ret23 Int) scull_init_module_ret <- (var scull_init_module_ret Int) scull_init_module::result <- (var scull_init_module::result Int) call_scull_cleanup_module_ret24 <- (var call_scull_cleanup_module_ret24 Int) loader_ret <- (var loader_ret Int) loader::arg <- (var loader::arg Int) call_scull_init_module_ret25 <- (var call_scull_init_module_ret25 Int) call_scull_cleanup_module_ret26 <- (var call_scull_cleanup_module_ret26 Int) thread1_ret <- (var thread1_ret Int) thread1::arg <- (var thread1::arg Int) thread1::filp <- (var thread1::filp Int) thread1::buf <- (var thread1::buf Int) thread1::count <- (var thread1::count Int) thread1::off <- (var thread1::off Int) call___VERIFIER_nondet_int_ret27 <- (var call___VERIFIER_nondet_int_ret27 Int) call___VERIFIER_nondet_int_ret28 <- (var call___VERIFIER_nondet_int_ret28 Int) call_scull_open_ret29 <- (var call_scull_open_ret29 Int) call_scull_read_ret30 <- (var call_scull_read_ret30 Int) thread2_ret <- (var thread2_ret Int) thread2::arg <- (var thread2::arg Int) thread2::filp <- (var thread2::filp Int) thread2::buf <- (var thread2::buf Int) thread2::count <- (var thread2::count Int) thread2::off <- (var thread2::off Int) call___VERIFIER_nondet_int_ret31 <- (var call___VERIFIER_nondet_int_ret31 Int) call___VERIFIER_nondet_int_ret32 <- (var call___VERIFIER_nondet_int_ret32 Int) call_scull_open_ret33 <- (var call_scull_open_ret33 Int) call_scull_write_ret34 <- (var call_scull_write_ret34 Int) main_ret <- (var main_ret Int) main::t1 <- (var main::t1 Int) main::t2 <- (var main::t2 Int) main::t3 <- (var main::t3 Int) call_pthread_mutex_init_ret35 <- (var call_pthread_mutex_init_ret35 Int) call_pthread_create_ret36 <- (var call_pthread_create_ret36 Int) call_pthread_create_ret37 <- (var call_pthread_create_ret37 Int) call_pthread_create_ret38 <- (var call_pthread_create_ret38 Int) call_pthread_join_ret39 <- (var call_pthread_join_ret39 Int) call_pthread_join_ret40 <- (var call_pthread_join_ret40 Int) call_pthread_join_ret41 <- (var call_pthread_join_ret41 Int) call_pthread_mutex_destroy_ret42 <- (var call_pthread_mutex_destroy_ret42 Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 32 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=300000, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=z3:4.12.2, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=z3:4.12.2, validateRefinementSolver=false, refinement=NWT_IT_WP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:12 no viable alternative at input '*'
server: Could not parse (assign lock* 2)
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1c1bbc4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@55fe41ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@fbd1f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1ce24091, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@5dda768f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7a8c8dcf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@24269709, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3541cb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7829b776, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@5778826f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@56bc3fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@df4b72, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2ba45490, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@37ff4054, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@894858, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7af707e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@737edcfa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@383790cf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@74971ed9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@131fcb6f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@ccd1bc3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@878537d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4455f57d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@29fc1a2b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4d0b0fd4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7a24eb3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6c37bd27, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@25d3cfc8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@30331109, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2571066a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@74fe5966, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4fe875be, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@677b8e13, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4a9486c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4c27d39d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@65004ff6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4cafa9aa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@562c877a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@67001148, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@989da1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@31cb96e1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3eed0f5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@64030b91, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2032e725, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4d23015c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@383f1975, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@441cc260, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@73a00e09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@26dcd8c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@66e889df, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@444548a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3766c667, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@773c0293, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@55b8dbda, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3b569985, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3a022576, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2dbd803f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3e48e859, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@31ddd4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1a5f7e7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@5b22b970, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@54657dd2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@706eab5d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@72725ee1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@40e60ece, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3f9270ed, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3a230001, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@5ac6c4f2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2aa6311a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@61f39bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@249e0271, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4893b344, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@53a665ad, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2c0b4c83, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@78525ef9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2d0ecb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4d654825, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3bfc6a5e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@51b35e4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@abff8b7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6d7cada5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@350a94ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7e00ed0f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@62db0521, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1b4ae4e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6ef1a1b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@5fbdc49b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@65753040, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2954b5ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4acb2510, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7be3a9ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@37d871c2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3baf6936, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@285f38f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4e1459ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@3ab6678b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7a904f32, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2b59501e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@476e8796, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4eed2acf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@36fc05ff, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@57c47a9e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@642505c7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4339e0de, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2d9f64c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@21ac5eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@52d6cd34, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@715d6168, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@27b2faa6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6428591a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@7397c6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1abfe081, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@2a685eba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@c2e3264, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@107f4980, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@75a118e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@1d540566, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6014a9ba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@acdcf71, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@77d680e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4a14c44f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@f08fdce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@6bda1d19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@28c86134, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@4492eede, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007f86a0099f38@cbc8d0f) }
server: env: Env( (Frame i <- (var i Int) lock <- (var lock Int) scull_quantum <- (var scull_quantum Int) scull_qset <- (var scull_qset Int) dev_data <- (var dev_data Int) dev_quantum <- (var dev_quantum Int) dev_qset <- (var dev_qset Int) dev_size <- (var dev_size Int) __X__ <- (var __X__ Int) lock* <- (var lock* Int) reach_error_ret <- (var reach_error_ret Int) down_interruptible_ret <- (var down_interruptible_ret Int) call_pthread_mutex_lock_ret0 <- (var call_pthread_mutex_lock_ret0 Int) up_ret <- (var up_ret Int) call_pthread_mutex_unlock_ret1 <- (var call_pthread_mutex_unlock_ret1 Int) copy_to_user_ret <- (var copy_to_user_ret Int) copy_to_user::to <- (var copy_to_user::to Int) copy_to_user::from <- (var copy_to_user::from Int) copy_to_user::n <- (var copy_to_user::n Int) call___VERIFIER_nondet_int_ret2 <- (var call___VERIFIER_nondet_int_ret2 Int) copy_from_user_ret <- (var copy_from_user_ret Int) copy_from_user::to <- (var copy_from_user::to Int) copy_from_user::from <- (var copy_from_user::from Int) copy_from_user::n <- (var copy_from_user::n Int) call___VERIFIER_nondet_int_ret3 <- (var call___VERIFIER_nondet_int_ret3 Int) scull_trim_ret <- (var scull_trim_ret Int) scull_trim::dev <- (var scull_trim::dev Int) scull_trim::qset <- (var scull_trim::qset Int) scull_open_ret <- (var scull_open_ret Int) scull_open::tid <- (var scull_open::tid Int) scull_open::i <- (var scull_open::i Int) scull_open::filp <- (var scull_open::filp Int) scull_open::dev <- (var scull_open::dev Int) call_down_interruptible_ret4 <- (var call_down_interruptible_ret4 Int) call_scull_trim_ret5 <- (var call_scull_trim_ret5 Int) call_reach_error_ret6 <- (var call_reach_error_ret6 Int) call_abort_ret7 <- (var call_abort_ret7 Int) call_up_ret8 <- (var call_up_ret8 Int) scull_follow_ret <- (var scull_follow_ret Int) scull_follow::dev <- (var scull_follow::dev Int) scull_follow::n <- (var scull_follow::n Int) call___VERIFIER_nondet_int_ret9 <- (var call___VERIFIER_nondet_int_ret9 Int) scull_read_ret <- (var scull_read_ret Int) scull_read::tid <- (var scull_read::tid Int) scull_read::filp <- (var scull_read::filp Int) scull_read::buf <- (var scull_read::buf Int) scull_read::count <- (var scull_read::count Int) scull_read::f_pos <- (var scull_read::f_pos Int) scull_read::dev <- (var scull_read::dev Int) scull_read::dptr <- (var scull_read::dptr Int) scull_read::quantum <- (var scull_read::quantum Int) scull_read::qset <- (var scull_read::qset Int) scull_read::itemsize <- (var scull_read::itemsize Int) scull_read::item <- (var scull_read::item Int) scull_read::s_pos <- (var scull_read::s_pos Int) scull_read::q_pos <- (var scull_read::q_pos Int) scull_read::rest <- (var scull_read::rest Int) scull_read::retval <- (var scull_read::retval Int) call_down_interruptible_ret10 <- (var call_down_interruptible_ret10 Int) call_scull_follow_ret11 <- (var call_scull_follow_ret11 Int) call_copy_to_user_ret12 <- (var call_copy_to_user_ret12 Int) call_reach_error_ret13 <- (var call_reach_error_ret13 Int) call_abort_ret14 <- (var call_abort_ret14 Int) call_up_ret15 <- (var call_up_ret15 Int) scull_write_ret <- (var scull_write_ret Int) scull_write::tid <- (var scull_write::tid Int) scull_write::filp <- (var scull_write::filp Int) scull_write::buf <- (var scull_write::buf Int) scull_write::count <- (var scull_write::count Int) scull_write::f_pos <- (var scull_write::f_pos Int) scull_write::dev <- (var scull_write::dev Int) scull_write::dptr <- (var scull_write::dptr Int) scull_write::quantum <- (var scull_write::quantum Int) scull_write::qset <- (var scull_write::qset Int) scull_write::itemsize <- (var scull_write::itemsize Int) scull_write::item <- (var scull_write::item Int) scull_write::s_pos <- (var scull_write::s_pos Int) scull_write::q_pos <- (var scull_write::q_pos Int) scull_write::rest <- (var scull_write::rest Int) scull_write::retval <- (var scull_write::retval Int) call_down_interruptible_ret16 <- (var call_down_interruptible_ret16 Int) call_scull_follow_ret17 <- (var call_scull_follow_ret17 Int) call_copy_from_user_ret18 <- (var call_copy_from_user_ret18 Int) call_reach_error_ret19 <- (var call_reach_error_ret19 Int) call_abort_ret20 <- (var call_abort_ret20 Int) call_up_ret21 <- (var call_up_ret21 Int) scull_cleanup_module_ret <- (var scull_cleanup_module_ret Int) scull_cleanup_module::dev <- (var scull_cleanup_module::dev Int) call___VERIFIER_nondet_int_ret22 <- (var call___VERIFIER_nondet_int_ret22 Int) call_scull_trim_ret23 <- (var call_scull_trim_ret23 Int) scull_init_module_ret <- (var scull_init_module_ret Int) scull_init_module::result <- (var scull_init_module::result Int) call_scull_cleanup_module_ret24 <- (var call_scull_cleanup_module_ret24 Int) loader_ret <- (var loader_ret Int) loader::arg <- (var loader::arg Int) call_scull_init_module_ret25 <- (var call_scull_init_module_ret25 Int) call_scull_cleanup_module_ret26 <- (var call_scull_cleanup_module_ret26 Int) thread1_ret <- (var thread1_ret Int) thread1::arg <- (var thread1::arg Int) thread1::filp <- (var thread1::filp Int) thread1::buf <- (var thread1::buf Int) thread1::count <- (var thread1::count Int) thread1::off <- (var thread1::off Int) call___VERIFIER_nondet_int_ret27 <- (var call___VERIFIER_nondet_int_ret27 Int) call___VERIFIER_nondet_int_ret28 <- (var call___VERIFIER_nondet_int_ret28 Int) call_scull_open_ret29 <- (var call_scull_open_ret29 Int) call_scull_read_ret30 <- (var call_scull_read_ret30 Int) thread2_ret <- (var thread2_ret Int) thread2::arg <- (var thread2::arg Int) thread2::filp <- (var thread2::filp Int) thread2::buf <- (var thread2::buf Int) thread2::count <- (var thread2::count Int) thread2::off <- (var thread2::off Int) call___VERIFIER_nondet_int_ret31 <- (var call___VERIFIER_nondet_int_ret31 Int) call___VERIFIER_nondet_int_ret32 <- (var call___VERIFIER_nondet_int_ret32 Int) call_scull_open_ret33 <- (var call_scull_open_ret33 Int) call_scull_write_ret34 <- (var call_scull_write_ret34 Int) main_ret <- (var main_ret Int) main::t1 <- (var main::t1 Int) main::t2 <- (var main::t2 Int) main::t3 <- (var main::t3 Int) call_pthread_mutex_init_ret35 <- (var call_pthread_mutex_init_ret35 Int) call_pthread_create_ret36 <- (var call_pthread_create_ret36 Int) call_pthread_create_ret37 <- (var call_pthread_create_ret37 Int) call_pthread_create_ret38 <- (var call_pthread_create_ret38 Int) call_pthread_join_ret39 <- (var call_pthread_join_ret39 Int) call_pthread_join_ret40 <- (var call_pthread_join_ret40 Int) call_pthread_join_ret41 <- (var call_pthread_join_ret41 Int) call_pthread_mutex_destroy_ret42 <- (var call_pthread_mutex_destroy_ret42 Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 32 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as TimeoutOrNotSolvableError
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=0, inProcess=true, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=PRED_CART, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
server: line 1:12 no viable alternative at input '*'
server: Could not parse (assign lock* 2)
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@23bb8443, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@49438269, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@ba2f4ec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1c1bbc4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@55fe41ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@fbd1f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1ce24091, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@5dda768f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7a8c8dcf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@24269709, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3541cb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7829b776, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@5778826f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@56bc3fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@df4b72, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2ba45490, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@37ff4054, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@894858, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7af707e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@737edcfa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@383790cf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@74971ed9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@131fcb6f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@ccd1bc3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@878537d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4455f57d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@29fc1a2b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4d0b0fd4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7a24eb3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6c37bd27, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@25d3cfc8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@30331109, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2571066a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@74fe5966, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4fe875be, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@677b8e13, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4a9486c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4c27d39d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@65004ff6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4cafa9aa, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@562c877a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@67001148, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@989da1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@31cb96e1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3eed0f5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@64030b91, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2032e725, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4d23015c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@383f1975, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@441cc260, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@73a00e09, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@26dcd8c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@66e889df, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@444548a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3766c667, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@773c0293, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@55b8dbda, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3b569985, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3a022576, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2dbd803f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3e48e859, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@31ddd4a4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1a5f7e7c, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@5b22b970, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@54657dd2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@706eab5d, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@72725ee1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@40e60ece, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3f9270ed, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3a230001, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@5ac6c4f2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2aa6311a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@61f39bb, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@249e0271, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4893b344, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@53a665ad, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2c0b4c83, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@78525ef9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2d0ecb24, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4d654825, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3bfc6a5e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@51b35e4e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@abff8b7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6d7cada5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@350a94ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7e00ed0f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@62db0521, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1b4ae4e0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6ef1a1b9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@5fbdc49b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@65753040, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2954b5ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4acb2510, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7be3a9ce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@37d871c2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3baf6936, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@285f38f6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4e1459ea, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@3ab6678b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7a904f32, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2b59501e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@476e8796, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4eed2acf, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@36fc05ff, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@57c47a9e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@642505c7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4339e0de, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2d9f64c9, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@21ac5eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@52d6cd34, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@715d6168, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@27b2faa6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6428591a, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@7397c6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1abfe081, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@2a685eba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@c2e3264, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@107f4980, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@75a118e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@1d540566, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6014a9ba, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@acdcf71, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@77d680e6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4a14c44f, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@f08fdce, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@6bda1d19, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@28c86134, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@4492eede, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$10/0x00007fd248099f38@cbc8d0f) }
server: env: Env( (Frame i <- (var i Int) lock <- (var lock Int) scull_quantum <- (var scull_quantum Int) scull_qset <- (var scull_qset Int) dev_data <- (var dev_data Int) dev_quantum <- (var dev_quantum Int) dev_qset <- (var dev_qset Int) dev_size <- (var dev_size Int) __X__ <- (var __X__ Int) lock* <- (var lock* Int) reach_error_ret <- (var reach_error_ret Int) down_interruptible_ret <- (var down_interruptible_ret Int) call_pthread_mutex_lock_ret0 <- (var call_pthread_mutex_lock_ret0 Int) up_ret <- (var up_ret Int) call_pthread_mutex_unlock_ret1 <- (var call_pthread_mutex_unlock_ret1 Int) copy_to_user_ret <- (var copy_to_user_ret Int) copy_to_user::to <- (var copy_to_user::to Int) copy_to_user::from <- (var copy_to_user::from Int) copy_to_user::n <- (var copy_to_user::n Int) call___VERIFIER_nondet_int_ret2 <- (var call___VERIFIER_nondet_int_ret2 Int) copy_from_user_ret <- (var copy_from_user_ret Int) copy_from_user::to <- (var copy_from_user::to Int) copy_from_user::from <- (var copy_from_user::from Int) copy_from_user::n <- (var copy_from_user::n Int) call___VERIFIER_nondet_int_ret3 <- (var call___VERIFIER_nondet_int_ret3 Int) scull_trim_ret <- (var scull_trim_ret Int) scull_trim::dev <- (var scull_trim::dev Int) scull_trim::qset <- (var scull_trim::qset Int) scull_open_ret <- (var scull_open_ret Int) scull_open::tid <- (var scull_open::tid Int) scull_open::i <- (var scull_open::i Int) scull_open::filp <- (var scull_open::filp Int) scull_open::dev <- (var scull_open::dev Int) call_down_interruptible_ret4 <- (var call_down_interruptible_ret4 Int) call_scull_trim_ret5 <- (var call_scull_trim_ret5 Int) call_reach_error_ret6 <- (var call_reach_error_ret6 Int) call_abort_ret7 <- (var call_abort_ret7 Int) call_up_ret8 <- (var call_up_ret8 Int) scull_follow_ret <- (var scull_follow_ret Int) scull_follow::dev <- (var scull_follow::dev Int) scull_follow::n <- (var scull_follow::n Int) call___VERIFIER_nondet_int_ret9 <- (var call___VERIFIER_nondet_int_ret9 Int) scull_read_ret <- (var scull_read_ret Int) scull_read::tid <- (var scull_read::tid Int) scull_read::filp <- (var scull_read::filp Int) scull_read::buf <- (var scull_read::buf Int) scull_read::count <- (var scull_read::count Int) scull_read::f_pos <- (var scull_read::f_pos Int) scull_read::dev <- (var scull_read::dev Int) scull_read::dptr <- (var scull_read::dptr Int) scull_read::quantum <- (var scull_read::quantum Int) scull_read::qset <- (var scull_read::qset Int) scull_read::itemsize <- (var scull_read::itemsize Int) scull_read::item <- (var scull_read::item Int) scull_read::s_pos <- (var scull_read::s_pos Int) scull_read::q_pos <- (var scull_read::q_pos Int) scull_read::rest <- (var scull_read::rest Int) scull_read::retval <- (var scull_read::retval Int) call_down_interruptible_ret10 <- (var call_down_interruptible_ret10 Int) call_scull_follow_ret11 <- (var call_scull_follow_ret11 Int) call_copy_to_user_ret12 <- (var call_copy_to_user_ret12 Int) call_reach_error_ret13 <- (var call_reach_error_ret13 Int) call_abort_ret14 <- (var call_abort_ret14 Int) call_up_ret15 <- (var call_up_ret15 Int) scull_write_ret <- (var scull_write_ret Int) scull_write::tid <- (var scull_write::tid Int) scull_write::filp <- (var scull_write::filp Int) scull_write::buf <- (var scull_write::buf Int) scull_write::count <- (var scull_write::count Int) scull_write::f_pos <- (var scull_write::f_pos Int) scull_write::dev <- (var scull_write::dev Int) scull_write::dptr <- (var scull_write::dptr Int) scull_write::quantum <- (var scull_write::quantum Int) scull_write::qset <- (var scull_write::qset Int) scull_write::itemsize <- (var scull_write::itemsize Int) scull_write::item <- (var scull_write::item Int) scull_write::s_pos <- (var scull_write::s_pos Int) scull_write::q_pos <- (var scull_write::q_pos Int) scull_write::rest <- (var scull_write::rest Int) scull_write::retval <- (var scull_write::retval Int) call_down_interruptible_ret16 <- (var call_down_interruptible_ret16 Int) call_scull_follow_ret17 <- (var call_scull_follow_ret17 Int) call_copy_from_user_ret18 <- (var call_copy_from_user_ret18 Int) call_reach_error_ret19 <- (var call_reach_error_ret19 Int) call_abort_ret20 <- (var call_abort_ret20 Int) call_up_ret21 <- (var call_up_ret21 Int) scull_cleanup_module_ret <- (var scull_cleanup_module_ret Int) scull_cleanup_module::dev <- (var scull_cleanup_module::dev Int) call___VERIFIER_nondet_int_ret22 <- (var call___VERIFIER_nondet_int_ret22 Int) call_scull_trim_ret23 <- (var call_scull_trim_ret23 Int) scull_init_module_ret <- (var scull_init_module_ret Int) scull_init_module::result <- (var scull_init_module::result Int) call_scull_cleanup_module_ret24 <- (var call_scull_cleanup_module_ret24 Int) loader_ret <- (var loader_ret Int) loader::arg <- (var loader::arg Int) call_scull_init_module_ret25 <- (var call_scull_init_module_ret25 Int) call_scull_cleanup_module_ret26 <- (var call_scull_cleanup_module_ret26 Int) thread1_ret <- (var thread1_ret Int) thread1::arg <- (var thread1::arg Int) thread1::filp <- (var thread1::filp Int) thread1::buf <- (var thread1::buf Int) thread1::count <- (var thread1::count Int) thread1::off <- (var thread1::off Int) call___VERIFIER_nondet_int_ret27 <- (var call___VERIFIER_nondet_int_ret27 Int) call___VERIFIER_nondet_int_ret28 <- (var call___VERIFIER_nondet_int_ret28 Int) call_scull_open_ret29 <- (var call_scull_open_ret29 Int) call_scull_read_ret30 <- (var call_scull_read_ret30 Int) thread2_ret <- (var thread2_ret Int) thread2::arg <- (var thread2::arg Int) thread2::filp <- (var thread2::filp Int) thread2::buf <- (var thread2::buf Int) thread2::count <- (var thread2::count Int) thread2::off <- (var thread2::off Int) call___VERIFIER_nondet_int_ret31 <- (var call___VERIFIER_nondet_int_ret31 Int) call___VERIFIER_nondet_int_ret32 <- (var call___VERIFIER_nondet_int_ret32 Int) call_scull_open_ret33 <- (var call_scull_open_ret33 Int) call_scull_write_ret34 <- (var call_scull_write_ret34 Int) main_ret <- (var main_ret Int) main::t1 <- (var main::t1 Int) main::t2 <- (var main::t2 Int) main::t3 <- (var main::t3 Int) call_pthread_mutex_init_ret35 <- (var call_pthread_mutex_init_ret35 Int) call_pthread_create_ret36 <- (var call_pthread_create_ret36 Int) call_pthread_create_ret37 <- (var call_pthread_create_ret37 Int) call_pthread_create_ret38 <- (var call_pthread_create_ret38 Int) call_pthread_join_ret39 <- (var call_pthread_join_ret39 Int) call_pthread_join_ret40 <- (var call_pthread_join_ret40 Int) call_pthread_join_ret41 <- (var call_pthread_join_ret41 Int) call_pthread_mutex_destroy_ret42 <- (var call_pthread_mutex_destroy_ret42 Int)) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:191)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:109)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:29)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:56)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:163)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 32 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:118)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.Complex24Kt$complexPortfolio24$checker$1.invoke(complex24.kt:42)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:27)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:242)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:60)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:241)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:85)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:120)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:35)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:130)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Could not handle trigger ErrorCodeException(code=1) (Available triggers: [SolverError])
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=false, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CEGAR
Configuration: (CegarChecker (XcfaArgAbstractor (PriorityWaitlist (Combinator TargetFirst (Combinator (Inverter DepthOrder) CreationOrder)))) (XcfaSingleExprTraceRefiner ExprTraceSeqItpChecker XcfaPrecRefiner))
Iteration 1
| Checking abstraction...
|  |  (Re)initializing ARG...done
|  |  Starting ARG: 1 nodes, 1 incomplete, 0 unsafe
|  |  Building ARG...done
|  |  Finished ARG: 20 nodes, 5 incomplete, 1 unsafe
| Checking abstraction done, result: (AbstractorResult Unsafe)
| Refining abstraction...
|  |  Trace length: 15
|  |  Checking trace...done, result: (ExprTraceStatus Feasible)
Refining abstraction done, result: (RefinerResult Unsafe)
! Precision did NOT change in this iteration
(SafetyResult Unsafe Trace length: 15)
AlgorithmTimeMs: 135
Iterations: 1

Backend finished (in 214 ms)
(SafetyResult Unsafe Trace length: 15)
Config XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=DATA_RACE, frontendConfig=FrontendConfig(lbeLevel=LBE_LOCAL, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CEGAR, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=150000, inProcess=false, specConfig=CegarConfig(initPrec=EMPTY, porLevel=SPOR, porRandomSeed=-1, coi=NO_COI, cexMonitor=CHECK, abstractorConfig=CegarAbstractorConfig(abstractionSolver=Z3, validateAbstractionSolver=false, domain=EXPL, maxEnum=1, search=DFS, havocMemory=false), refinerConfig=CegarRefinerConfig(refinementSolver=Z3, validateRefinementSolver=false, refinement=SEQ_ITP, exprSplitter=WHOLE, pruneStrategy=FULL))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, svcomp=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false)) succeeded in 4301 ms
Backend finished (in 4305 ms)
(SafetyResult Unsafe Trace length: 15)

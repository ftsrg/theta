Theta/theta-start.sh sv-benchmarks/c/array-memsafety/openbsd_cstrcat-alloca-2.i --svcomp --portfolio CEGAR --loglevel RESULT --property sv-benchmarks/c/properties/no-overflow.prp --architecture ILP32


--------------------------------------------------------------------------------


Verifying input 'sv-benchmarks/c/array-memsafety/openbsd_cstrcat-alloca-2.i' with property 'sv-benchmarks/c/properties/no-overflow.prp' using arguments '--svcomp --portfolio CEGAR --loglevel RESULT --architecture ILP32'
Mapping property 'sv-benchmarks/c/properties/no-overflow.prp' to 'sv-benchmarks/c/properties/unreach-call.prp'
Language C detected and set for analysis (CPAMain.detectFrontendLanguageIfNecessary, INFO)

Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker 3.1-svn-c087875f13 / default (OpenJDK 64-Bit Server VM 17.0.15) started (CPAchecker.run, INFO)

Parsing CFA from file(s) "formatted_files/tmp.siLFmj52og" (CPAchecker.parse, INFO)

Using default specification, which checks for assertion failures and error labels. (CPAchecker.run, INFO)

Using Restarting Algorithm (CoreComponentsFactory.createAlgorithm, INFO)

The following configuration options were specified but are not used:
 instrumentation.instrumentationProperty 
 (CPAchecker.printConfigurationWarnings, WARNING)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Loading analysis 1 from file /home/runner/work/theta/theta/Theta/specification-transformation/cpachecker/config/components/kInduction+Invariants/kInduction.properties ... (RestartAlgorithm.run, INFO)

Using the following resource limits: CPU-time limit of 900s (Analysis /home/runner/work/theta/theta/Theta/specification-transformation/cpachecker/config/components/kInduction+Invariants/kInduction.properties:ResourceLimitChecker.fromConfiguration, INFO)


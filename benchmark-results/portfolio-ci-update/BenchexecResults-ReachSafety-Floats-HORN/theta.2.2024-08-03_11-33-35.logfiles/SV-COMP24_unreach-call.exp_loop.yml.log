Theta/theta-start.sh sv-benchmarks/c/float-benchs/exp_loop.c --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32 --portfolio HORN --input sv-benchmarks/c/float-benchs/exp_loop.c --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/float-benchs/exp_loop.c as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
WARNING: using int(1) as a string constant
Arithmetic: [NONLIN_INT, FLOAT]
Frontend finished:   (in 440 ms)
ParsingResult Success
Alias graph size: 2 -> [1, 1]
Starting verification of UnnamedXcfa using PORTFOLIO
Using CHC portfolio
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=true, specConfig=HornConfig(solver=z3:4.13.0, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
server: line 1:39 no viable alternative at input '*'
server: Could not parse (assign LDEXP::e (bvsdiv (deref main::e* #b00000000000000000000000000000000 (Bv 32)) #b00000000000000000000000000000010))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@501edcf1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@197d671, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@62923ee6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@4089713, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@f19c9d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@5467eea4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@160396db, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@7a799159, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@40ab8a8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@5bfc257, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@34523d46, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@2009f9b0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@50d951e7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@39ad12b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@4eb45fec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@211febf3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@3bd3d05e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@6aba5d30, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@71d8cfe7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@1e530163, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@14d8444b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@71466383, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@23706db8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@205bed61, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@129fed45, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@23592946, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@3e48d38, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@7c2b58c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@11b377c5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@7bca6fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@5c60b0a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@7a2b1eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f637c0aa1e0@702c436b) }
server: env: Env( (Frame reach_error_ret <- (var reach_error_ret (Bv 1)) call___assert_fail_ret0 <- (var call___assert_fail_ret0 (Bv 1)) assume_abort_if_not_ret <- (var assume_abort_if_not_ret (Bv 1)) assume_abort_if_not::cond <- (var assume_abort_if_not::cond (Bv 32)) call_abort_ret1 <- (var call_abort_ret1 (Bv 1)) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret (Bv 1)) __VERIFIER_assert::cond <- (var __VERIFIER_assert::cond (Bv 32)) call_reach_error_ret2 <- (var call_reach_error_ret2 (Bv 1)) call_abort_ret3 <- (var call_abort_ret3 (Bv 1)) FABS_ret <- (var FABS_ret (Fp 8 24)) FABS::d <- (var FABS::d (Fp 8 24)) FREXP_ret <- (var FREXP_ret (Fp 8 24)) FREXP::d <- (var FREXP::d (Fp 8 24)) FREXP::e <- (var FREXP::e (Bv 32)) FREXP::x <- (var FREXP::x (Bv 32)) FREXP::r <- (var FREXP::r (Fp 8 24)) FREXP::dd <- (var FREXP::dd (Fp 8 24)) call_FABS_ret4 <- (var call_FABS_ret4 (Fp 8 24)) LDEXP_ret <- (var LDEXP_ret (Fp 8 24)) LDEXP::d <- (var LDEXP::d (Fp 8 24)) LDEXP::e <- (var LDEXP::e (Bv 32)) LDEXP::x <- (var LDEXP::x (Fp 8 24)) main_ret <- (var main_ret (Bv 32)) main::a <- (var main::a (Fp 8 24)) main::b <- (var main::b (Fp 8 24)) main::c <- (var main::c (Fp 8 24)) main::e <- (var main::e (Bv 32)) call___VERIFIER_nondet_float_ret5 <- (var call___VERIFIER_nondet_float_ret5 (Fp 8 24)) call_assume_abort_if_not_ret6 <- (var call_assume_abort_if_not_ret6 (Bv 1)) call_FREXP_ret7 <- (var call_FREXP_ret7 (Fp 8 24)) call_LDEXP_ret8 <- (var call_LDEXP_ret8 (Fp 8 24)) call___VERIFIER_assert_ret9 <- (var call___VERIFIER_assert_ret9 (Bv 1)) main::e* <- (var main::e* (Bv 32))) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.derefExpr(StmtParser.java:3201)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtract(StmtParser.java:3107)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.primeExpr(StmtParser.java:3032)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayWrite(StmtParser.java:2958)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayRead(StmtParser.java:2881)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.functionCall(StmtParser.java:2792)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseNotExpr(StmtParser.java:2716)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.unaryExpr(StmtParser.java:2637)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtendExpr(StmtParser.java:2541)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvConcatExpr(StmtParser.java:2451)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2350)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2370)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:153)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 80 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:30)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=500000, inProcess=true, specConfig=HornConfig(solver=eldarica:2.1, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
server: line 1:39 no viable alternative at input '*'
server: Could not parse (assign LDEXP::e (bvsdiv (deref main::e* #b00000000000000000000000000000000 (Bv 32)) #b00000000000000000000000000000010))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@501edcf1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@197d671, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@62923ee6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@4089713, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@f19c9d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@5467eea4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@160396db, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@7a799159, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@40ab8a8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@5bfc257, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@34523d46, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@2009f9b0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@50d951e7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@39ad12b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@4eb45fec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@211febf3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@3bd3d05e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@6aba5d30, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@71d8cfe7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@1e530163, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@14d8444b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@71466383, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@23706db8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@205bed61, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@129fed45, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@23592946, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@3e48d38, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@7c2b58c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@11b377c5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@7bca6fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@5c60b0a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@7a2b1eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007faf780aa1e0@702c436b) }
server: env: Env( (Frame reach_error_ret <- (var reach_error_ret (Bv 1)) call___assert_fail_ret0 <- (var call___assert_fail_ret0 (Bv 1)) assume_abort_if_not_ret <- (var assume_abort_if_not_ret (Bv 1)) assume_abort_if_not::cond <- (var assume_abort_if_not::cond (Bv 32)) call_abort_ret1 <- (var call_abort_ret1 (Bv 1)) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret (Bv 1)) __VERIFIER_assert::cond <- (var __VERIFIER_assert::cond (Bv 32)) call_reach_error_ret2 <- (var call_reach_error_ret2 (Bv 1)) call_abort_ret3 <- (var call_abort_ret3 (Bv 1)) FABS_ret <- (var FABS_ret (Fp 8 24)) FABS::d <- (var FABS::d (Fp 8 24)) FREXP_ret <- (var FREXP_ret (Fp 8 24)) FREXP::d <- (var FREXP::d (Fp 8 24)) FREXP::e <- (var FREXP::e (Bv 32)) FREXP::x <- (var FREXP::x (Bv 32)) FREXP::r <- (var FREXP::r (Fp 8 24)) FREXP::dd <- (var FREXP::dd (Fp 8 24)) call_FABS_ret4 <- (var call_FABS_ret4 (Fp 8 24)) LDEXP_ret <- (var LDEXP_ret (Fp 8 24)) LDEXP::d <- (var LDEXP::d (Fp 8 24)) LDEXP::e <- (var LDEXP::e (Bv 32)) LDEXP::x <- (var LDEXP::x (Fp 8 24)) main_ret <- (var main_ret (Bv 32)) main::a <- (var main::a (Fp 8 24)) main::b <- (var main::b (Fp 8 24)) main::c <- (var main::c (Fp 8 24)) main::e <- (var main::e (Bv 32)) call___VERIFIER_nondet_float_ret5 <- (var call___VERIFIER_nondet_float_ret5 (Fp 8 24)) call_assume_abort_if_not_ret6 <- (var call_assume_abort_if_not_ret6 (Bv 1)) call_FREXP_ret7 <- (var call_FREXP_ret7 (Fp 8 24)) call_LDEXP_ret8 <- (var call_LDEXP_ret8 (Fp 8 24)) call___VERIFIER_assert_ret9 <- (var call___VERIFIER_assert_ret9 (Bv 1)) main::e* <- (var main::e* (Bv 32))) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.derefExpr(StmtParser.java:3201)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtract(StmtParser.java:3107)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.primeExpr(StmtParser.java:3032)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayWrite(StmtParser.java:2958)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayRead(StmtParser.java:2881)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.functionCall(StmtParser.java:2792)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseNotExpr(StmtParser.java:2716)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.unaryExpr(StmtParser.java:2637)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtendExpr(StmtParser.java:2541)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvConcatExpr(StmtParser.java:2451)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2350)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2370)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:153)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 80 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:30)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=300000, inProcess=true, specConfig=HornConfig(solver=golem:0.5.0, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
server: line 1:39 no viable alternative at input '*'
server: Could not parse (assign LDEXP::e (bvsdiv (deref main::e* #b00000000000000000000000000000000 (Bv 32)) #b00000000000000000000000000000010))
server: scope: Scope{
server: enclosingScope: null
server: symbolTable: SymbolTable(hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@501edcf1, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@197d671, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@62923ee6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@4089713, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@f19c9d2, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@5467eea4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@160396db, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@7a799159, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@40ab8a8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@5bfc257, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@34523d46, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@2009f9b0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@50d951e7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@39ad12b6, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@4eb45fec, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@211febf3, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@3bd3d05e, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@6aba5d30, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@71d8cfe7, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@1e530163, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@14d8444b, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@71466383, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@23706db8, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@205bed61, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@129fed45, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@23592946, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@3e48d38, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@7c2b58c0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@11b377c5, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@7bca6fac, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@5c60b0a0, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@7a2b1eb4, hu.bme.mit.theta.grammar.gson.VarDeclAdapter$$Lambda$12/0x00007f35d40aa1e0@702c436b) }
server: env: Env( (Frame reach_error_ret <- (var reach_error_ret (Bv 1)) call___assert_fail_ret0 <- (var call___assert_fail_ret0 (Bv 1)) assume_abort_if_not_ret <- (var assume_abort_if_not_ret (Bv 1)) assume_abort_if_not::cond <- (var assume_abort_if_not::cond (Bv 32)) call_abort_ret1 <- (var call_abort_ret1 (Bv 1)) __VERIFIER_assert_ret <- (var __VERIFIER_assert_ret (Bv 1)) __VERIFIER_assert::cond <- (var __VERIFIER_assert::cond (Bv 32)) call_reach_error_ret2 <- (var call_reach_error_ret2 (Bv 1)) call_abort_ret3 <- (var call_abort_ret3 (Bv 1)) FABS_ret <- (var FABS_ret (Fp 8 24)) FABS::d <- (var FABS::d (Fp 8 24)) FREXP_ret <- (var FREXP_ret (Fp 8 24)) FREXP::d <- (var FREXP::d (Fp 8 24)) FREXP::e <- (var FREXP::e (Bv 32)) FREXP::x <- (var FREXP::x (Bv 32)) FREXP::r <- (var FREXP::r (Fp 8 24)) FREXP::dd <- (var FREXP::dd (Fp 8 24)) call_FABS_ret4 <- (var call_FABS_ret4 (Fp 8 24)) LDEXP_ret <- (var LDEXP_ret (Fp 8 24)) LDEXP::d <- (var LDEXP::d (Fp 8 24)) LDEXP::e <- (var LDEXP::e (Bv 32)) LDEXP::x <- (var LDEXP::x (Fp 8 24)) main_ret <- (var main_ret (Bv 32)) main::a <- (var main::a (Fp 8 24)) main::b <- (var main::b (Fp 8 24)) main::c <- (var main::c (Fp 8 24)) main::e <- (var main::e (Bv 32)) call___VERIFIER_nondet_float_ret5 <- (var call___VERIFIER_nondet_float_ret5 (Fp 8 24)) call_assume_abort_if_not_ret6 <- (var call_assume_abort_if_not_ret6 (Bv 1)) call_FREXP_ret7 <- (var call_FREXP_ret7 (Fp 8 24)) call_LDEXP_ret8 <- (var call_LDEXP_ret8 (Fp 8 24)) call___VERIFIER_assert_ret9 <- (var call___VERIFIER_assert_ret9 (Bv 1)) main::e* <- (var main::e* (Bv 32))) )
server: type: StmtLabel
server: Exception in thread "main" java.lang.reflect.InvocationTargetException
server: 	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
server: 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
server: 	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method.callMethod(CallerImpl.kt:97)
server: 	at kotlin.reflect.jvm.internal.calls.CallerImpl$Method$Instance.call(CallerImpl.kt:113)
server: 	at kotlin.reflect.jvm.internal.KCallableImpl.call(KCallableImpl.kt:108)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:83)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:69)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaLabelAdapter.read(XcfaLabelAdapter.kt:33)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.parseProcedures(XcfaAdapter.kt:180)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:101)
server: 	at hu.bme.mit.theta.xcfa.gson.XcfaAdapter.read(XcfaAdapter.kt:30)
server: 	at com.google.gson.internal.bind.TypeAdapters$34$1.read(TypeAdapters.java:979)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:161)
server: 	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:266)
server: 	at com.google.gson.Gson.fromJson(Gson.java:1058)
server: 	at com.google.gson.Gson.fromJson(Gson.java:986)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:54)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
server: 	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
server: Caused by: org.antlr.v4.runtime.misc.ParseCancellationException
server: 	at org.antlr.v4.runtime.BailErrorStrategy.recover(BailErrorStrategy.java:51)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:764)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.derefExpr(StmtParser.java:3201)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtract(StmtParser.java:3107)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.primeExpr(StmtParser.java:3032)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayWrite(StmtParser.java:2958)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.arrayRead(StmtParser.java:2881)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.functionCall(StmtParser.java:2792)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseNotExpr(StmtParser.java:2716)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.unaryExpr(StmtParser.java:2637)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvExtendExpr(StmtParser.java:2541)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bvConcatExpr(StmtParser.java:2451)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2350)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.multiplicativeExpr(StmtParser.java:2370)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.additiveExpr(StmtParser.java:2237)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseShiftExpr(StmtParser.java:2145)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseAndExpr(StmtParser.java:2049)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseXorExpr(StmtParser.java:1971)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.bitwiseOrExpr(StmtParser.java:1880)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.relationExpr(StmtParser.java:1793)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.equalityExpr(StmtParser.java:1695)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.notExpr(StmtParser.java:1618)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.andExpr(StmtParser.java:1532)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.xorExpr(StmtParser.java:1455)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.orExpr(StmtParser.java:1365)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.fpFuncExpr(StmtParser.java:1279)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.quantifiedExpr(StmtParser.java:1061)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.implyExpr(StmtParser.java:982)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iffExpr(StmtParser.java:897)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.iteExpr(StmtParser.java:818)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:741)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.expr(StmtParser.java:608)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.assignStmt(StmtParser.java:397)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.stmt(StmtParser.java:210)
server: 	at hu.bme.mit.theta.grammar.dsl.stmt.StatementWrapper.<init>(StmtParser.kt:54)
server: 	at hu.bme.mit.theta.xcfa.model.StmtLabel$Companion.fromString(XcfaLabel.kt:153)
server: 	... 27 more
server: Caused by: org.antlr.v4.runtime.NoViableAltException
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.noViableAlt(ParserATNSimulator.java:2026)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.execATN(ParserATNSimulator.java:467)
server: 	at org.antlr.v4.runtime.atn.ParserATNSimulator.adaptivePredict(ParserATNSimulator.java:393)
server: 	at hu.bme.mit.theta.grammar.dsl.gen.StmtParser.funcLitExpr(StmtParser.java:736)
server: 	... 80 more
ErrorCodeException(code=1)
	at hu.bme.mit.theta.xcfa.cli.checkers.InProcessChecker.check(InProcessChecker.kt:115)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:30)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)
Caught exception: ErrorCodeException(code=1)
Could not handle trigger ErrorCodeException(code=1) (Available triggers: [])
Caught exception: ErrorCodeException(code=1)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=100000, inProcess=false, specConfig=HornConfig(solver=z3:4.13.0, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
Starting encoding
Process failed! (hu.bme.mit.theta.solver.smtlib.solver.SmtLibSolver.issueGeneralCommand(SmtLibSolver.java:311), hu.bme.mit.theta.solver.smtlib.solver.SmtLibSolverException: "line 5 column 57: unknown sort 'FloatingPoint'")
Caught exception: ErrorCodeException(code=221)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=500000, inProcess=false, specConfig=HornConfig(solver=eldarica:2.1, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
Starting encoding
Process failed! (hu.bme.mit.theta.solver.smtlib.impl.generic.GenericSmtLibExprTransformer.toTerm(GenericSmtLibExprTransformer.java:436), com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: java.lang.IllegalStateException: Incomplete dereferences (missing uniquenessIdx) are not handled properly.)
Caught exception: ErrorCodeException(code=202)
Handling exception as Anything
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=CHC, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=300000, inProcess=false, specConfig=HornConfig(solver=golem:0.5.0, validateSolver=false)), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using CHC
Starting encoding
Process failed! (hu.bme.mit.theta.solver.smtlib.impl.generic.GenericSmtLibExprTransformer.toTerm(GenericSmtLibExprTransformer.java:436), com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: com.google.common.util.concurrent.UncheckedExecutionException: java.lang.IllegalStateException: Incomplete dereferences (missing uniquenessIdx) are not handled properly.)
Caught exception: ErrorCodeException(code=202)
Could not handle trigger ErrorCodeException(code=202) (Available triggers: [])
Caught exception: ErrorCodeException(code=202)
Could not handle trigger ErrorCodeException(code=202) (Available triggers: [])
ErrorCodeException(code=202)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitProcess(ExitCodes.kt:46)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:94)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HornKt$hornPortfolio$checker$1.invoke(horn.kt:39)
	at hu.bme.mit.theta.xcfa.cli.portfolio.ConfigNode.execute(stm.kt:44)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.portfolio.HierarchicalNode.execute(stm.kt:33)
	at hu.bme.mit.theta.xcfa.cli.portfolio.STM.execute(stm.kt:111)
	at hu.bme.mit.theta.xcfa.cli.checkers.ConfigToPortfolioKt.getPortfolioChecker$lambda$0(ConfigToPortfolio.kt:82)
	at hu.bme.mit.theta.analysis.algorithm.SafetyChecker.check(SafetyChecker.java:30)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:215)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt$backend$result$1.invoke(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.params.ExitCodesKt.exitOnError(ExitCodes.kt:58)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.backend(ExecuteConfig.kt:214)
	at hu.bme.mit.theta.xcfa.cli.ExecuteConfigKt.runConfig(ExecuteConfig.kt:84)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.run(XcfaCli.kt:104)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.access$run(XcfaCli.kt:36)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli$Companion.main(XcfaCli.kt:115)
	at hu.bme.mit.theta.xcfa.cli.XcfaCli.main(XcfaCli.kt)

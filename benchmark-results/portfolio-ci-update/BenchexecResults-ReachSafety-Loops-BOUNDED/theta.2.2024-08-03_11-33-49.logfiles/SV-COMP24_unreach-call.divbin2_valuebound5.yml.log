Theta/theta-start.sh sv-benchmarks/c/nla-digbench-scaling/divbin2_valuebound5.i --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32


--------------------------------------------------------------------------------


LD_LIBRARY_PATH=/home/runner/work/theta/theta/Theta/lib /usr/lib/jvm/java-17-openjdk-amd64/bin/java -Xss120m -Xmx14210m -jar /home/runner/work/theta/theta/Theta/theta.jar --disable-xcfa-serialization --disable-c-serialization --disable-arg-generation --backend PORTFOLIO --loglevel INFO --property sv-benchmarks/c/properties/unreach-call.prp --architecture ILP32 --portfolio BOUNDED --input sv-benchmarks/c/nla-digbench-scaling/divbin2_valuebound5.i --smt-home /home/runner/work/theta/theta/Theta/solvers
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Parsing the input sv-benchmarks/c/nla-digbench-scaling/divbin2_valuebound5.i as C
WARNING: signedness of the type char is implementation specific. Right now it is interpreted as a signed char.
Arithmetic: [NONLIN_INT]
Frontend finished:   (in 365 ms)
ParsingResult Success
Alias graph size: 0 -> []
Starting verification of UnnamedXcfa using PORTFOLIO
Using bounded portfolio
Current configuration: XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=BOUNDED, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=30000, inProcess=true, specConfig=BoundedConfig(maxBound=0, bmcConfig=BMCConfig(disable=false, nonLfPath=false, bmcSolver=Z3, validateBMCSolver=false), indConfig=InductionConfig(disable=true, indSolver=Z3, validateIndSolver=false, indMinBound=0, indFreq=1), itpConfig=InterpolationConfig(disable=true, itpSolver=cvc5:1.0.8, validateItpSolver=false))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false))
Registered Legacy-Z3 SolverManager
Registered Z3 SolverManager
Registered JavaSMT SolverManager
Registered SMT-LIB SolverManager
Starting verification of UnnamedXcfa using BOUNDED
server: Registered Legacy-Z3 SolverManager
server: Registered Z3 SolverManager
server: Registered JavaSMT SolverManager
server: Registered SMT-LIB SolverManager
server: Starting verification of UnnamedXcfa using BOUNDED
server: Starting iteration 1
server: 	Starting BMC
server: Starting iteration 2
server: 	Starting BMC
server: Starting iteration 3
server: 	Starting BMC
server: Starting iteration 4
server: 	Starting BMC
server: Starting iteration 5
server: 	Starting BMC
server: Starting iteration 6
server: 	Starting BMC
server: Starting iteration 7
server: 	Starting BMC
server: Starting iteration 8
server: 	Starting BMC
server: Starting iteration 9
server: 	Starting BMC
server: Starting iteration 10
server: 	Starting BMC
server: Starting iteration 11
server: 	Starting BMC
server: Starting iteration 12
server: 	Starting BMC
server: Starting iteration 13
server: 	Starting BMC
server: Starting iteration 14
server: 	Starting BMC
server: Starting iteration 15
server: 	Starting BMC
server: Starting iteration 16
server: 	Starting BMC
server: Starting iteration 17
server: 	Starting BMC
server: Starting iteration 18
server: 	Starting BMC
server: Starting iteration 19
server: 	Starting BMC
server: Safety proven in BMC step
server: Backend finished (in 12919 ms)
server: (SafetyResult Safe)
Backend finished (in 14002 ms)
(SafetyResult Safe)
Config XcfaConfig(inputConfig=InputConfig(inputFile=null, catFile=null, parseCtx=null, xcfaWCtx=present, propertyFile=null, property=ERROR_LOCATION, frontendConfig=FrontendConfig(lbeLevel=LBE_SEQ, staticCoi=false, loopUnroll=1000, forceUnroll=-1, enableFew=false, inputType=C, specConfig=CFrontendConfig(arithmetic=efficient, architecture=LP64)), backendConfig=BackendConfig(backend=BOUNDED, solverHome=/home/runner/work/theta/theta/Theta/solvers, timeoutMs=30000, inProcess=true, specConfig=BoundedConfig(maxBound=0, bmcConfig=BMCConfig(disable=false, nonLfPath=false, bmcSolver=Z3, validateBMCSolver=false), indConfig=InductionConfig(disable=true, indSolver=Z3, validateIndSolver=false, indMinBound=0, indFreq=1), itpConfig=InterpolationConfig(disable=true, itpSolver=cvc5:1.0.8, validateItpSolver=false))), outputConfig=OutputConfig(versionInfo=false, enableOutput=false, resultFolder=., cOutputConfig=COutputConfig(disable=true, useArr=false, useExArr=false, useRange=false), xcfaOutputConfig=XcfaOutputConfig(disable=false), chcOutputConfig=ChcOutputConfig(disable=false), witnessConfig=WitnessConfig(disable=false, concretizerSolver=Z3, validateConcretizerSolver=false), argConfig=ArgConfig(disable=true)), debugConfig=DebugConfig(debug=false, stacktrace=false, logLevel=INFO, argdebug=false, argToFile=false)) succeeded in 14023 ms
Backend finished (in 14027 ms)
(SafetyResult Safe)
